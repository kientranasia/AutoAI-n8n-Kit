volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:

networks:
  autoai-net:

services:
  postgres:
    image: postgres:16-alpine
    container_name: autoai-postgres
    networks: ['autoai-net']
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  n8n:
    image: n8nio/n8n:latest
    container_name: autoai-n8n
    networks: ['autoai-net']
    restart: unless-stopped
    ports:
      - 5678:5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - WEBHOOK_URL=${N8N_URL}
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  qdrant:
    image: qdrant/qdrant
    container_name: autoai-qdrant
    networks: ['autoai-net']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # cloudflare-tunnel:
  #   image: cloudflare/cloudflared:latest
  #   container_name: autoai-cloudflare-tunnel
  #   hostname: cloudflare-tunnel
  #   networks: ['autoai-net']
  #   restart: unless-stopped
  #   command: tunnel --no-autoupdate run
  #   environment:
  #     - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
  #   depends_on:
  #     - n8n
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.2'
  #         memory: 128M
